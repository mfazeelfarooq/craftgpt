// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  password      String
  displayName   String
  avatar        String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  sentMessages  Message[]     @relation("sentMessages")
  conversations Participant[]
  createdGroups Group[]       @relation("createdBy")
}

model Conversation {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  messages     Message[]
  participants Participant[]
  isGroup      Boolean       @default(false)
  group        Group?
}

model Participant {
  id             String       @id @default(cuid())
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  createdAt      DateTime     @default(now())

  @@unique([userId, conversationId])
}

model Message {
  id             String       @id @default(cuid())
  content        String
  createdAt      DateTime     @default(now())
  sender         User         @relation("sentMessages", fields: [senderId], references: [id])
  senderId       String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
}

model Group {
  id             String       @id @default(cuid())
  name           String
  description    String?
  avatar         String?
  createdBy      User         @relation("createdBy", fields: [createdById], references: [id])
  createdById    String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String       @unique
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
